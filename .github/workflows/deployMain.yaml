name: Docker Deploy Main

on:
  push:
    branches: [ "main" ]

jobs:
  build_and_tag:
    runs-on: self-hosted

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from .csproj
        id: extract_version
        run: |
          $version = (Select-String -Path TestProject/TestProject/TestProject.csproj -Pattern '(?<=<Version>)[^<]+' -AllMatches).Matches[0].Value
          if (-not [string]::IsNullOrEmpty($version)) {
            echo "VERSION=$version" >> $env:GITHUB_ENV
          } else {
            Write-Error "Failed to extract version"
            exit 1
            }

      - name: Configure Git
        if: env.VERSION
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Check if tag exists and delete if present
        if: env.VERSION
        id: delete_tag
        run: |
          $tagExists = git tag -l "v${{ env.VERSION }}"
          if ($tagExists) {
            git tag -d "v${{ env.VERSION }}"
            git push --delete origin "v${{ env.VERSION }}"
            Write-Host "Deleted existing tag v${{ env.VERSION }}"
          }

      - name: Tag the commit
        if: env.VERSION
        run: |
          git tag -a "v${{ env.VERSION }}" -m "Version ${{ env.VERSION }}"
          
      - name: Force-push tags to origin
        if: env.VERSION
        run: |
          git push origin tag "v${{ env.VERSION }}"

      - name: DockerHub login
        if: env.VERSION
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and Push Docker Image
        if: env.VERSION
        run: |
          docker build -t veselin2424/test_projects:testproject_latest -t veselin2424/test_projects:testproject_${{ env.VERSION }} -f TestProject/TestProject/Dockerfile .
          docker push veselin2424/test_projects:testproject_latest
          docker push veselin2424/test_projects:testproject_${{ env.VERSION }}
          
  deploy:
    name: Deploy Container
    runs-on: ubuntu-latest
    needs: build_and_tag
    steps:
      - name: Install OpenSSH client
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: Deploy to server
        env:
          SERVER_IP: 10.10.12.20
          SERVER_USER: m2mdev
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh ${SERVER_USER}@${SERVER_IP}
            echo "ddddd" > "Desktop\test1file.txt"
            docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}"
            docker pull veselin2424/test_projects:testproject_latest
            docker stop TestProject
            docker rm TestProject
            docker run -d --name TestProject veselin2424/test_projects:testproject_latest
